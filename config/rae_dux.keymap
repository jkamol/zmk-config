/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&sl {
    release-after-ms = <3000>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <200>;
};

&key_repeat {
    usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
};

// Mouse move
&mmv {
        time-to-max-speed-ms = <1000>;
        acceleration-exponent=<1>;
};
// Mouse wheel
&mwh {
        time-to-max-speed-ms = <2000>;
        acceleration-exponent=<0>;
};

#define MMV_UP MOVE_VERT(-1400)
#define MMV_DN MOVE_VERT(1400)
#define MMV_LT MOVE_HOR(-1400)
#define MMV_RT MOVE_HOR(1400)
#define MWH_UP SCROLL_VERT(20)
#define MWH_DN SCROLL_VERT(-20)
#define MWH_LT SCROLL_HOR(-20)
#define MWH_RT SCROLL_HOR(20)

#define MAIN_L   0
#define MM_L     1
#define SYM_L    2
#define NAV_L    3
#define NUMROW_L 4
#define FN_L     5
#define NUMPAD_L 6
#define BOARD_L  7
#define MIRROR_L 8

#define SSHOT RG(RS(S))
#define SWLANG LA(LSHFT)

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24  // left-hand keys
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29  // right-hand keys
#define THUMBS 30 31 32 33 34 35                        // thumb keys
#define EXTRA_L 2 3 4 12 13 14 22 23 24                 // extra left-hand keys
#define EXTRA_R 5 6 7 15 16 17 25 26 27                 // extra right-hand keys

/ {
    combos {
        compatible = "zmk,combos";

    // shortcut
    #define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
          combo_##NAME { \
            timeout-ms = <TIMEOUT>; \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
          };

        /*                KEY POSITIONS

          ╭────────────────────╮ ╭────────────────────╮
          │  0   1   2   3   4 │ │  5   6   7   8   9 │
          │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
          │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
          ╰───────╮ 30  31  32 │ │ 33  34  35 ╭───────╯
                  ╰────────────╯ ╰────────────╯        */


        COMBO(enter, &kp ENTER, 11 12, 30)
        COMBO(escape, &kp ESCAPE, 1 2, 30)
        COMBO(swlang, &kp SWLANG, 10 11, 30)

        COMBO(board_layer_l, &sl BOARD_L, 20 21 22 23, 100)
        COMBO(board_layer_r, &sl BOARD_L, 26 27 28 29, 100)
        COMBO(function_layer_tg, &tog FN_L, 15 16 25 26, 50)
        COMBO(main_layer, &to MAIN_L, 10 11 12 13, 100)
        COMBO(mirror_layer_mo, &mo MIRROR_L, 30 31, 30)
        COMBO(numpad_layer_mo, &mo NUMPAD_L, 13 23, 50)
        COMBO(numpad_layer_tg, &tog NUMPAD_L, 13 14 23 24, 50)
        COMBO(numrow_layer_mo, &mo NUMROW_L, 31 34, 50)
    };

    behaviors {
        hml: home-row-left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <50>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R EXTRA_L THUMBS>;
        };
        hmr: home-row-right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <50>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L EXTRA_R THUMBS>;
        };
        mtl: mod-tap-left {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
        };
        mtr: mod-tap-right {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_RIGHT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // MAIN
        main_layer {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &kp Q           &kp W           &kp F           &kp P           &kp B               &kp J           &kp L           &kp U           &kp Y           &kp APOS
                &kp A           &kp R           &kp S           &kp T           &kp G               &kp M           &kp N           &kp E           &kp I           &kp O
                &kp Z           &kp X           &kp C           &kp D           &kp V               &kp K           &kp H           &kp COMMA       &kp DOT         &kp SLASH
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &lt MM_L TAB    &lt SYM_L SPACE &kp LSHFT           &none           &lt NAV_L BSPC  &lt FN_L ENTER
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };

        modmouse_layer {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &kp RA(F4)      &kp RC(F4)      &kp ESC         &mt SSHOT PSCRN &kp RC(RA(DEL))     &mwh MWH_UP     &mwh MWH_LT     &mmv MMV_UP     &mwh MWH_RT     &kp CAPS
                &sk LSHFT       &sk LALT        &sk LCTRL       &sk LGUI        &kp TAB             &mwh MWH_DN     &mmv MMV_LT     &mmv MMV_DN     &mmv MMV_RT     &none
                &kp RC(Z)       &kp RC(X)       &kp RC(C)       &kp RC(V)       &kp RC(Y)           &sk RALT        &none           &mkp MCLK       &none           &kp INSERT
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &trans          &trans          &trans              &trans          &mkp LCLK       &mkp RCLK
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };

        sym_layer {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &kp GRAVE       &kp N9          &kp N8          &kp N7          &kp N6              &kp CARET       &kp AMPS        &kp AT          &kp HASH        &kp DLLR
                &mt LSHFT N4    &mtl LALT N3    &mtl LCTRL N2   &mtl LGUI N1    &kp N5              &kp TILDE       &kp MINUS       &kp STAR        &kp EQUAL       &mt RSHFT SEMI
                &kp LPAR        &kp BSPC        &kp N0          &kp DEL         &kp RPAR            &kp PRCNT       &kp LBKT        &kp RBKT        &kp EXCL        &kp BSLH
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &mo FN_L        &trans          &trans              &trans          &trans          &trans
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };

        nav_layer {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &none           &none           &none           &none           &none               &kp PAGE_UP     &kp HOME        &kp UP          &kp END         &none
                &kp LSHFT       &kp LALT        &kp LCTRL       &kp LGUI        &none               &kp PAGE_DOWN   &kp LEFT        &kp DOWN        &kp RIGHT       &mt RSHFT SWLANG
                &none           &none           &none           &none           &none               &kp K_CMENU     &kp DELETE      &kp ENTER       &kp BSPC        &kp LALT
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &trans          &trans          &trans              &trans          &trans          &mo FN_L
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };

        numrow_layer {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT           &kp CARET       &kp AMPS        &kp STAR        &kp LPAR        &kp RPAR
                &mt LSHFT N1    &kp N2          &kp N3          &kp N4          &kp N5              &kp N6          &kp N7          &kp N8          &kp N9          &mt RSHFT N0
                &kp LC(Z)       &kp LC(X)       &kp LC(C)       &kp LC(V)       &kp LC(Y)           &kp BSPC        &kp DELETE      &kp COMMA       &kp DOT         &mt RCTRL SLASH
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &trans          &trans          &trans              &trans          &trans          &trans
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };

        function_layer {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &kp N1          &kp N2          &kp N3          &kp N4          &kp PAUSE_BREAK     &kp C_VOL_UP    &kp SLCK        &none           &none           &none
                &kp F1          &kp F2          &kp F3          &kp F4          &kp F5              &kp C_VOL_DN    &kp C_PREV      &kp C_PP        &kp C_NEXT      &kp RSHFT
                &kp F6          &kp F7          &kp F8          &kp F9          &kp F10             &kp F11         &kp F12         &kp C_MUTE      &none           &kp RCTRL
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &trans          &kp LALT        &mo NUMPAD_L        &trans          &trans          &trans
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };

        numpad_layer {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &kp Q           &kp M           &kp F           &kp P           &kp T               &mt KP_NUM KP_MULTIPLY  &kp KP_N7  &kp KP_N8    &kp KP_N9       &kp KP_MINUS
                &kp N1          &kp N2          &kp N3          &kp N4          &kp N5              &kp KP_PLUS     &kp KP_N4       &kp KP_N5       &kp KP_N6       &kp KP_DOT
                &kp Z           &kp ESC         &kp C           &kp S           &kp B               &kp BACKSPACE   &kp KP_N1       &kp KP_N2       &kp KP_N3       &kp KP_DIVIDE
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &trans          &kp LALT        &trans              &trans          &trans          &kp KP_N0
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };

        board_layer {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &none           &none           &none           &none           &none               &none           &none           &out OUT_USB    &out OUT_BLE    &out OUT_TOG
                &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4        &none           &none           &none           &trans          &trans
                &none           &none           &bt BT_CLR      &bootloader     &none               &none           &bootloader     &none           &trans          &trans
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &kp LA(LEFT)    &kp LA(RIGHT)   &trans              &trans          &trans          &trans
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };

        main_mirror {
            bindings = <
            //╭─────────────────────────────────────────────────────────────────────────────────╮ ╭─────────────────────────────────────────────────────────────────────────────────╮
                &kp APOS        &kp Y           &kp U           &kp L           &kp J               &kp B           &kp P           &kp F           &kp W           &kp Q
                &kp O           &kp I           &kp E           &kp N           &kp M               &kp G           &kp T           &kp S           &kp R           &kp A
                &kp SLASH       &kp DOT         &kp COMMA       &kp H           &kp K               &kp V           &kp D           &kp C           &kp X           &kp Z
            //╰─────────────────────────────────────────────────────────────────────────────────┤ ├─────────────────────────────────────────────────────────────────────────────────╯
                                                &none           &none           &none               &none           &none           &none
            //                              ╰───────────────────────────────────────────────────╯ ╰───────────────────────────────────────────────────╯
            >;
        };
    };
};
