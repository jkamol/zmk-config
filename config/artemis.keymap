/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
  release-after-ms = <750>;
  quick-release;
};

&sl {
  release-after-ms = <3000>;
};

&lt {
  flavor = "balanced";
};

&key_repeat {
  usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
};

// Mouse move
&mmv {
  time-to-max-speed-ms = <200>;
  acceleration-exponent=<1>;
};
// Mouse wheel
&mwh {
  time-to-max-speed-ms = <200>;
  acceleration-exponent=<0>;
}; 

#define MMV_UP MOVE_VERT(-1600)
#define MMV_DN MOVE_VERT(1600)
#define MMV_LT MOVE_HOR(-1600)
#define MMV_RT MOVE_HOR(1600)
#define MWH_UP SCROLL_VERT(20)
#define MWH_DN SCROLL_VERT(-20)
#define MWH_LT SCROLL_HOR(-20)
#define MWH_RT SCROLL_HOR(20)

#define MAIN_L   0
#define QWERTY_L 1
#define SYM_L    2
#define NAV_L    3
#define NUMROW_L 4
#define FN_L     5
#define NUMPAD_L 6
#define BOARD_L  7
#define SHCT_L   8

#define MEH LC(LA(LSHFT))
#define SW_LANG LA(LSHFT)
#define TASK_MNG LC(LS(ESC))

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24  // left-hand keys
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29  // right-hand keys
#define THUMBS 30 31 32 33 34 35                        // thumb keys
#define EXTRA_L 2 3 4 12 13 14 22 23 24                 // extra left-hand keys
#define EXTRA_R 5 6 7 15 16 17 25 26 27                 // extra right-hand keys

/ {
  combos {
    compatible = "zmk,combos";

    // shortcut
    #define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
      combo_##NAME { \
        timeout-ms = <TIMEOUT>; \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
      };

      /*                KEY POSITIONS

      ╭────────────────────╮ ╭────────────────────╮
      │  0   1   2   3   4 │ │  5   6   7   8   9 │
      │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
      │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
      ╰───────────╮ 30  31 │ │ 32  33  ╭──────────╯
                  ╰────────╯ ╰─────────╯           */


    COMBO(enter, &kp ENTER, 11 12, 15)
    COMBO(escape, &kp ESCAPE, 1 2, 15)
    COMBO(swlang, &kp SW_LANG, 10 11, 30)
    COMBO(repeat, &key_repeat, 3 13, 30)

    COMBO(board_layer_mo, &mo BOARD_L, 14 24, 50)
    COMBO(board_layer_l, &sl BOARD_L, 20 21 22 23, 100)
    COMBO(board_layer_r, &sl BOARD_L, 26 27 28 29, 100)
    COMBO(function_layer_tg, &tog FN_L, 15 16 25 26, 50)
    COMBO(main_layer, &to MAIN_L, 10 11 12 13, 100)
    COMBO(mirror_layer_mo, &mo SHCT_L, 30 31, 30)
    COMBO(numpad_layer_mo, &mo NUMPAD_L, 13 23, 50)
    COMBO(numpad_layer_tg, &tog NUMPAD_L, 13 14 23 24, 50)
    COMBO(numrow_layer_mo, &mo NUMROW_L, 31 32, 50)
    COMBO(qwerty_layer, &to QWERTY_L, 0 1 2 3, 100)
  };

  behaviors {
    hmt: hold-mod-tap {
      compatible = "zmk,behavior-hold-tap";
      label = "HOLD_MOD_TAP";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <500>;
      bindings = <&kp>, <&kp>;
    };
    hml: home-row-left {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ROW_LEFT";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <150>;
      quick-tap-ms = <50>;
      global-quick-tap;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <KEYS_R EXTRA_L THUMBS>;
    };
    hmr: home-row-right {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ROW_RIGHT";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <150>;
      quick-tap-ms = <50>;
      global-quick-tap;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <KEYS_L EXTRA_R THUMBS>;
    };
    mtb: mod-tap-balanced {
      compatible = "zmk,behavior-hold-tap";
      label = "MOD_TAP_BALANCED";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      bindings = <&kp>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    // MAIN 
    main_layer {
      label = "MAIN";
      bindings = <
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &mtb LC(LSHFT) Q  &kp L           &kp D           &kp P           &mtb RALT B         &mtb RALT J             &kp F           &kp O               &kp U           &mtb LC(LSHFT) APOS
        &hml LSHFT C      &hml LALT R     &hml LCTRL S    &kp T           &kp G               &kp M                   &kp N           &kp A               &kp I           &hmr LSHFT Y
        &mtb LCTRL Z      &kp X           &kp V           &kp W           &mtb LGUI K         &mtb RGUI SEMICOLON     &kp H           &kp SLASH           &kp COMMA       &mtb LCTRL DOT
    /*╰─────────────────────────────────────────────╮*/   &mt LCTRL TAB   &lt SYM_L SPACE     &lt NAV_L E             &lt FN_L ENTER  /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >;  
    };

    qwerty_layer {
      label = "QWERT";
      bindings = < 
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &kp Q             &kp W           &kp E           &kp R           &kp T               &kp Y                   &kp U           &kp I               &kp O           &kp P
        &hml LSHFT  A     &kp S           &kp D           &kp F           &kp G               &kp H                   &kp J           &kp K               &kp L           &hmr LSHFT SEMICOLON
        &kp Z             &kp X           &kp C           &kp V           &kp B               &kp N                   &kp M           &kp COMMA           &kp DOT         &kp SLASH
    /*╰─────────────────────────────────────────────╮*/   &trans          &trans              &trans                  &trans          /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >;      
    };

    sym_layer {
      label = "SYM";
      bindings = <
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &hmt LA(F4) N6    &kp N7          &hmt TASK_MNG N8 &kp N9         &kp N0              &mtb RALT CARET         &kp AMPS        &kp AT              &kp HASH        &kp DLLR
        &mtb LSHFT N1     &mtb LALT N2    &hml LCTRL N3   &kp N4          &kp N5              &kp GRAVE               &kp MINUS       &kp STAR            &kp EQUAL       &mtb LSHFT SEMICOLON
        &mtb LCTRL DOT    &kp BSPC        &mtb LC(LS(S)) PSCRN &kp DELETE &key_repeat         &kp PRCNT               &kp LBKT        &kp BSLH            &kp EXCL        &kp RBKT
    /*╰─────────────────────────────────────────────╮*/   &mo FN_L        &trans              &mo NUMROW_L            &trans          /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >;
    };

    nav_layer {
      label = "NAVI";
      bindings = <
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &kp LC(LSHFT)     &mwh MWH_UP     &mmv MMV_UP     &mkp MCLK       &kp LALT            &none                   &kp K_CMENU     &kp UP              &kp PAGE_UP     &kp CAPS
        &kp LSHFT         &mmv MMV_LT     &mmv MMV_DN     &mmv MMV_RT     &kp INSERT          &kp HOME                &kp LEFT        &kp DOWN            &kp RIGHT       &mtb LSHFT END
        &mtb LCTRL LC(Z)  &mwh MWH_DN     &kp LC(C)       &kp LC(V)       &kp LGUI            &kp BACKSPACE           &kp DELETE      &kp SW_LANG         &kp PAGE_DOWN   &kp LCTRL
    /*╰─────────────────────────────────────────────╮*/   &mkp RCLK       &mkp LCLK           &trans                  &kp LALT        /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >; 
    };

    numrow_layer {
      label = "NUMR";
      bindings = <
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &kp EXCL          &kp AT          &kp HASH        &kp DLLR        &kp PRCNT           &kp CARET               &kp AMPS        &kp STAR            &kp LPAR        &kp RPAR
        &mtb LSHFT N1     &kp N2          &kp N3          &kp N4          &kp N5              &kp N6                  &kp N7          &kp N8              &kp N9          &mtb LSHFT N0
        &kp LC(Z)         &kp LC(X)       &kp LC(C)       &kp LC(V)       &kp LC(Y)           &kp BACKSPACE           &kp DELETE      &kp SLASH           &kp COMMA       &mtb LCTRL DOT
    /*╰─────────────────────────────────────────────╮*/   &trans          &trans              &trans                  &trans          /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >;
    };

    function_layer {
      label = "FUNC";
      bindings = <
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &kp N1            &kp N2          &kp N3          &kp N4          &kp N5              &kp SCROLLLOCK          &kp C_BRI_UP    &kp LC(LA(DEL))     &kp C_VOL_UP    &kp PAUSE_BREAK
        &kp F1            &kp F2          &kp F3          &kp F4          &kp F5              &kp F11                 &kp C_PREV      &kp C_PLAY_PAUSE    &kp C_MUTE      &kp C_NEXT
        &kp F6            &kp F7          &kp F8          &kp F9          &kp F10             &kp F12                 &kp C_BRI_DN    &kp MEH             &kp C_VOL_DN    &kp LCTRL
    /*╰─────────────────────────────────────────────╮*/   &mo NUMPAD_L    &kp LALT            &kp TAB                 &trans          /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >;
    };

    numpad_layer {
      label = "NUMP";
      bindings = <
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &kp Q             &kp M           &kp F           &kp P           &kp T               &hmt KP_NUM KP_MULTIPLY &kp KP_N7       &kp KP_N8           &kp KP_N9       &kp KP_DIVIDE
        &kp N1            &kp N2          &kp N3          &kp N4          &kp N5              &kp KP_PLUS             &kp KP_N4       &kp KP_N5           &kp KP_N6       &kp KP_SUBTRACT
        &kp Z             &kp ESC         &kp C           &kp S           &kp B               &kp BACKSPACE           &kp KP_N1       &kp KP_N2           &kp KP_N3       &kp KP_DOT
    /*╰─────────────────────────────────────────────╮*/   &trans          &kp LALT            &kp KP_N0               &trans          /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >;
    };

    board_layer {
      label = "NUMP";
      bindings = <
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &none             &none           &none           &none           &none               &none                   &none           &out OUT_USB        &out OUT_BLE    &out OUT_TOG
        &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4        &none                   &none           &none               &trans          &trans
        &none             &none           &bt BT_CLR      &bootloader     &none               &none                   &bootloader     &none               &trans          &trans
    /*╰─────────────────────────────────────────────╮*/   &kp LA(LEFT)    &kp LA(RIGHT)       &trans                  &trans          /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >;
    };

    shortcut_layer {
      label = "SHORT";
      bindings = <
    //╭──────────────────────────────────────────────────────────────────────────────────╮  ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
        &none             &kp HOME        &kp UP          &kp END         &mkp RCLK           &none                   &none           &none               &none           &none
        &mtb LSHFT LC(A)  &kp LEFT        &kp DOWN        &kp RIGHT       &mkp LCLK           &none                   &mkp LCLK       &mkp RCLK           &none           &kp LSHFT
        &kp LC(Z)         &none           &kp LC(LA(LG(V))) &none         &kp LC(Y)           &none                   &none           &none               &none           &none
    /*╰─────────────────────────────────────────────╮*/   &none           &none               &trans                  &trans          /*╭────────────────────────────────────────────────────╯*/
    //                                              ╰────────────────────────────────────╯  ╰───────────────────────────────────────────╯
      >; 
    };

  };
};
